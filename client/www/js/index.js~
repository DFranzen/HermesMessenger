/*
 * Licensed to the Apache Software Foundation (ASF) under one
 * or more contributor license agreements.  See the NOTICE file
 * distributed with this work for additional information
 * regarding copyright ownership.  The ASF licenses this file
 * to you under the Apache License, Version 2.0 (the
 * "License"); you may not use this file except in compliance
 * with the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
var app = {
    // Application Constructor
    initialize: function() {
        this.bindEvents();
    },
    // Bind Event Listeners
    //
    // Bind any events that are required on startup. Common events are:
    // 'load', 'deviceready', 'offline', and 'online'.
    bindEvents: function() {
        document.addEventListener('deviceready', this.onDeviceReady, false);
    },
    // deviceready Event Handler
    //
    // The scope of 'this' is the event. In order to call the 'receivedEvent'
    // function, we must explicitly call 'app.receivedEvent(...);'
    onDeviceReady: function() {
        app.receivedEvent('deviceready');
    },
    // Update DOM on a Received Event
    receivedEvent: function(id) {
        var parentElement = document.getElementById(id);
        var listeningElement = parentElement.querySelector('.listening');
        var receivedElement = parentElement.querySelector('.received');

        listeningElement.setAttribute('style', 'display:none;');
        receivedElement.setAttribute('style', 'display:block;');

        console.log('Received Event: ' + id);
    }
};

var ws;
var ip;
var user_name;
var target="Bob";
function addMessage(msgtext,side) {
    var msgdiv = document.getElementById("messages");
    var newmsg = document.createElement("div");
    newmsg.classList.add("message");
    newmsg.classList.add(side);
    newmsg.appendChild(document.createTextNode(msgtext));
    msgdiv.appendChild(newmsg);
}

function sendthis() {
    var msgText=document.getElementById("msgText").value;
    document.getElementById("msgText").value = "";
    ws.send("M<"+user_name+"><"+target+">"+msgText);
    addMessage(msgText,"right",target);
}

function connect()
{
    ip = document.getElementById('ipaddr').value;
    user_name = document.getElementById('name').value;
    if ("WebSocket" in window)
    {
	document.getElementById('state').innerHTML = "Connecting ...";
        
        // Let us open a web socket
        ws = new WebSocket("ws://"+ip+"/echo");
	
        ws.onopen = function()
        {
	    document.getElementById('state').innerHTML = "Logged in to "+ip+ " as " + user_name;
	    document.getElementById('connection').style.display="none";
	    document.getElementById('messaging').style.display="block";
	    document.getElementById('buttonDisconnect').style.display="block";
	    ws.send("I"+user_name);
        };
	
        ws.onmessage = function (evt) 
        {
            var txt = evt.data;
	    fin = txt.indexOf('>');
	    sender = txt.substr(2,fin-2);
	    msg = txt.substr(fin+1,txt.length);
	    addMessage(msg,"left",sender);
        };
	
        ws.onclose = function()
        {
            document.getElementById('state').innerHTML = "Not connected";
	    document.getElementById('connection').style.display="block";
	    document.getElementById('messaging').style.display="none";
	    document.getElementById('buttonDisconnect').style.display="none";
        };
    }
    
    else
    {
        // The browser doesn't support WebSocket
        alert("WebSocket NOT supported by your Browser!");
    }
}

function disconnect()
{
    ws.close()
}
    
function show_dropdown()
{
    document.getElementById("dropdownNames").classList.toggle("show");
}

// Close the dropdown menu if the user clicks outside of it
window.onclick = function(event) {
  if (!event.target.matches('.dropbtn')) {

    var dropdowns = document.getElementsByClassName("dropdown-content");
    var i;
    for (i = 0; i < dropdowns.length; i++) {
      var openDropdown = dropdowns[i];
      if (openDropdown.classList.contains('show')) {
        openDropdown.classList.remove('show');
      }
    }
  }
}

function set_dropdown(name)
{
    document.getElementById("name").value = name
}

function show_view(view)
{
    var views = document.getElementsByClassName("view");
    var i;
    for (i = 0; i < views.length; i++) {
      var openDropdown = views[i];
      if (openDropdown.classList.contains('show')) {
        openDropdown.classList.remove('show');
      }
    }
    document.getElementById(view).classList.toggle("show");
}

window.onload=function(){show_view("connection")};
